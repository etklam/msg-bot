generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model CronJob {
  id             Int            @id @default(autoincrement())
  name           String         @db.VarChar(255)
  prompt         String         @db.Text
  schedule       String         @db.VarChar(50)
  telegramChatId String         @map("telegram_chat_id") @db.VarChar(100)
  isActive       Boolean        @default(true) @map("is_active")
  createdAt      DateTime       @default(now()) @map("created_at")
  updatedAt      DateTime       @updatedAt @map("updated_at")
  executionLogs  ExecutionLog[]

  @@map("cron_jobs")
}

model ExecutionLog {
  id           Int       @id @default(autoincrement())
  cronJobId    Int       @map("cron_job_id")
  status       LogStatus @default(PENDING)
  promptSent   String?   @map("prompt_sent") @db.Text
  aiResponse   String?   @map("ai_response") @db.Text
  errorMessage String?   @map("error_message") @db.Text
  executedAt   DateTime  @default(now()) @map("executed_at")
  cronJob      CronJob   @relation(fields: [cronJobId], references: [id])

  @@index([cronJobId], map: "execution_logs_cron_job_id_fkey")
  @@map("execution_logs")
}

model SystemConfig {
  id          Int      @id @default(autoincrement())
  key         String   @unique @db.VarChar(255)
  value       String?  @db.Text
  description String?  @db.Text
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("system_configs")
}

enum LogStatus {
  PENDING
  SUCCESS
  FAILED
}
